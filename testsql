SELECT A.ProfileDetailID as ProfileID, A.Interval,
A.ActivePower as P, A.ReactivePower as Q,
A.ActivePowerConstantImpedancePU as P_Z, A.ActivePowerConstantCurrentPU as P_I, A.ActivePowerConstantPowerPU as P_P, 
A.ReactivePowerConstantImpedancePU as Q_Z, A.ReactivePowerConstantCurrentPU as Q_I, A.ReactivePowerConstantPowerPU as Q_P 
FROM DPF_Profile DP WITH(NOLOCK) 
INNER JOIN DPF_ProfileDetail PD WITH(NOLOCK) ON DP.ID = PD.ProfileID 
INNER JOIN DPF_ProfileData A WITH(NOLOCK) ON A.ProfileDetailID = PD.ID 
where A.ProfileDetailID IN (4,5,6,7) 
ORDER BY ProfileID, Interval;


public async Task<List<YourResultType>> GetProfileDataAsync(List<int> profileDetailIds)
{
    using (var dbContext = new YourDbContext())
    {
        var query = from dp in dbContext.DPF_Profile.AsNoTracking()
                    join pd in dbContext.DPF_ProfileDetail.AsNoTracking() on dp.ID equals pd.ProfileID
                    join a in dbContext.DPF_ProfileData.AsNoTracking() on pd.ID equals a.ProfileDetailID
                    where profileDetailIds.Contains(a.ProfileDetailID)
                    orderby a.ProfileDetailID, a.Interval
                    select new YourResultType
                    {
                        ProfileID = a.ProfileDetailID,
                        Interval = a.Interval,
                        P = a.ActivePower,
                        Q = a.ReactivePower,
                        P_Z = a.ActivePowerConstantImpedancePU,
                        P_I = a.ActivePowerConstantCurrentPU,
                        P_P = a.ActivePowerConstantPowerPU,
                        Q_Z = a.ReactivePowerConstantImpedancePU,
                        Q_I = a.ReactivePowerConstantCurrentPU,
                        Q_P = a.ReactivePowerConstantPowerPU
                    };

        return await query.ToListAsync();
    }
}


SELECT T.TransformerName as DTR, Child.Name, Child.FullName, M.ObjectType as DERTYPE 
FROM DPF_Transformer T with (nolock) 
INNER JOIN WS_GEO_DataPoint Parent with (nolock) ON T.TransformerName = Parent.Name 
INNER JOIN WS_GEO_Marker P with (nolock) ON P.Id = Parent.MarkerId AND P.ObjectType = 'Transformer' 
LEFT JOIN WS_GEO_DataPoint Child with (nolock) ON Child.ParentId = Parent.Id
INNER JOIN WS_GEO_Marker M with (nolock) ON M.Id = Child.MarkerId AND M.ObjectType IN ('Meter', 'Solar', 'EV', 'Battery', 'Microgrid', 'Backup Generator') 
WHERE T.OptionID = 432;



